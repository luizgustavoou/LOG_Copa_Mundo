@{
    Page.Title = "Participacao";
    Layout = "~/AreaRestrita/_Layout.cshtml";
}

@functions {
    private class Jogo
    {
        public string IdJogo { get; set; }
        public string IdTime1 { get; set; }
        public string NomeTime1 { get; set; }
        public string IdTime2 { get; set; }
        public string NomeTime2 { get; set; }
        public int Placar1 { get; set; }
        public int Placar2 { get; set; }

    }

    private class Participacao
    {
        public string IdParticipacao { get; set; }
        public string idJogo { get; set; }
        public string idJogador { get; set; }
        public string GolsMarcados { get; set; }
    }


    string acao = null;
    string idTime = null;
    string nome = null;

    List<Jogo> jogos = null;
    List<Participacao> partipacoes = null;


    private void AlimentaVariaveis()
    {
        acao = Request.Form["acao"];
        idTime = Request.Form["idTime"];
        nome = Request.Form["nome"];
    }

    private void ConsultarParticipacoes()
    {

        string procedure = GetNomeProcedure("C");
        Dao dao = new Dao();

        partipacoes = dao.ExecutarProcedureList<Participacao>(procedure, null);

    }

    private void ConsultarJogos()
    {

        string procedure = GetNomeProcedure("C");
        Dao dao = new Dao();

        Dictionary<string, object> parametros = new Dictionary<string, object>();

        parametros.Add("@TipoRetorno", 1);

        jogos = dao.ExecutarProcedureList<Jogo>(procedure, parametros);

    }

    private string GetNomeProcedure(string acao)
    {
        switch (acao)
        {
            case "C": return "stp_LGU_Participacao_Sel";
            case "I": return "stp_LGU_Participacao_Ins";
            case "A": return "stp_LGU_Participacao_Upd";
            case "E": return "stp_LGU_Participacao_Del";
            default:
                return null;
        }
    }

    private void Manutencao()
    {
        Dictionary<string, object> parametros = new Dictionary<string, object>();

        parametros.Add("@IdTime", idTime);
        parametros.Add("@Nome", nome);

        string procedure = GetNomeProcedure(acao);




        Dao dao = new Dao();

        dao.ExecutarProcedure(procedure, parametros);
    }
}

@{
    AlimentaVariaveis();

    if(acao == "I" || acao == "A" || acao == "E")
    {

        Manutencao();
    }

    ConsultarParticipacoes();
    ConsultarJogos();

}

@section head {
    <link href="~/Scripts/Style.css" rel="stylesheet">
}

<body>
    <form name="form1" method="post">
        <input type="hidden" name="acao" id="acao" />
        <input type="hidden" name="idTime" id="idTime" value="@idTime" />

        <div class="container">
            
            @*Screen 1*@

            <div>
                <h1>Escolha uma partida</h1>
                
                @if (jogos != null)
                {
                    <div>
                        <select name="idJogoSelecionado" id="idJogoSelecionado">
                            @foreach (Jogo item in jogos)
                            {
                                <option value="@item.IdJogo">
                                    <span>@item.NomeTime1</span>
                                    <span>@item.Placar1</span>
                                    <span>X</span>
                                    <span>@item.NomeTime2</span>
                                    <span>@item.Placar2</span>
                                </option>
                            }
                        </select>
                    </div>
         
                }
            </div>

            @*Screen 2*@

            <div>

            </div>
            


        </div>
    </form>

    <script>
        function executarAcao(acao) {
            document.form1.acao.value = acao;
            document.form1.submit();
        }

        function editar(idTime, nome) {
            document.form1.idTime.value = idTime;
            document.form1.nome.value = nome;
        }
    </script>
</body>


