@RenderPage("~/AreaRestrita/Seguranca.cshtml");
@{
    Page.Title = "Participacao";
    Layout = "~/AreaRestrita/_Layout.cshtml";
}

@functions {
    private class Jogo
    {
        public string IdJogo { get; set; }
        public string IdTime1 { get; set; }
        public string NomeTime1 { get; set; }
        public string IdTime2 { get; set; }
        public string NomeTime2 { get; set; }
        public int Placar1 { get; set; }
        public int Placar2 { get; set; }
    }

    private class Participacao
    {

        public string IdTime { get; set; }
        public string NomeTime { get; set; }
        public string IdJogador { get; set; }
        public string NomeJogador { get; set; }
        public int GolsMarcados { get; set; }
    }


    string acao = null;
    string idJogo = null;
    string idJogador = null;

    List<Jogo> jogos = null;
    Jogo jogo = null;
    List<Participacao> partipacoes = null;
    List<Botao> botoes = null;


    private void instanciarJogo()
    {
        if (jogo == null)
        {
            jogo = new Jogo();
        }
    }

    private void AlimentaVariaveis()
    {
        instanciarJogo();
        acao = Util.ChecaNulo(Request.Form["acao"]);
        idJogo = Util.ChecaNulo(Request.Form["idJogo"]);
        idJogador = Util.ChecaNulo(Request.Form["idJogador"]);
        botoes = new BotaoDao().GetAll();
    }

    private void ConsultarParticipacoes()
    {
        Dictionary<string, object> parametros = new Dictionary<string, object>();
        parametros.Add("@IdJogo", idJogo);
        parametros.Add("@TipoRetorno", 2);

        partipacoes = new Dao().ExecutarAcaoList<Participacao>("C", parametros);
    }

    private void ConsultarJogos()
    {
        Dictionary<string, object> parametros = new Dictionary<string, object>();

        parametros.Add("@TipoRetorno", 3);

        jogos = new Dao().ExecutarAcaoList<Jogo>("C", parametros);

    }

    private void ConsultarJogo()
    {
        Dictionary<string, object> parametros = new Dictionary<string, object>();
        parametros.Add("@TipoRetorno", 4);
        parametros.Add("@IdJogo", idJogo);

        jogo = new Dao().ExecutarAcaoList<Jogo>("C", parametros).First();

    }

    private string GetNomeProcedure(string acao)
    {
        switch (acao)
        {
            case "C": return "stp_LGU_Participacao_Sel";
            case "A": return "stp_LGU_Participacao_Upd";
            default:
                return null;
        }
    }

    private void Manutencao()
    {
        Dictionary<string, object> parametros = new Dictionary<string, object>();

        parametros.Add("@IdJogo", idJogo);
        parametros.Add("@IdJogador", idJogador);

        new Dao().ExecutarAcao(acao, parametros);
    }
}

@{
    AlimentaVariaveis();

    if (acao == "I" || acao == "A")
    {
        try
        {
            Manutencao();
        }
        catch (Exception ex)
        {
            ModelState.AddError("alert-danger", ex.Message);

        }
    }

    if (idJogo != null)
    {
        ConsultarParticipacoes();
        ConsultarJogo();

    }

    ConsultarJogos();

}

@section head {
    <link href="~/Scripts/Style.css" rel="stylesheet">
}

<form class="text-light flex-grow-1" name="form1" id="form1" method="post">
    <input type="hidden" name="acao" id="acao" />
    <input type="hidden" name="idJogo" id="idJogo" value="@idJogo" />
    <input type="hidden" name="idJogador" id="idJogador" value="@idJogador" />

    <div class="container">


        <div>
            <h1>Escolha uma partida</h1>
            @PageHelper.MakeAlert()

            @if (jogos != null)
            {
                <select class="form-select" name="idJogoSelecionado" id="idJogoSelecionado">
                    @if (idJogo == null)
                    {
                        <option value="" selected>
                        </option>
                    }
                    @foreach (Jogo item in jogos)
                    {
                        <option value="@item.IdJogo" @(idJogo == item.IdJogo ? "selected" : "")>
                            <span>@item.NomeTime1</span>
                            <span>@item.Placar1</span>
                            <span>X</span>
                            <span>@item.NomeTime2</span>
                            <span>@item.Placar2</span>
                        </option>
                    }
                </select>

                <div class="mt-5">
                    @if (idJogo != null && jogo != null)
                    {
                        <div class="position-relative  text-white  mb-3 border border-5 rounded  d-flex justify-content-between" style="border-color: #C9CCCB;">
                            <div class="flex-grow-1 p-4  d-flex justify-content-center align-items-center" style="background-color: #008cff">
                                <span class="fw-bolder" style="letter-spacing: 2px; font-size: 1.5rem;">
                                    @jogo.NomeTime1
                                </span>
                            </div>

                            <div class="px-5 border border-5 rounded position-absolute flex-grow-1 justify-content-center align-items-center px-4 py-2 d-flex gap-2" style="height: 150%; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: black; border-color: #C9CCCB">
                                <span class="fw-bolder" style="font-size: 2.5rem; ">
                                    @jogo.Placar1
                                </span>
                                <span class="fw-bolder" style="font-size: 2.5rem; ">
                                    -
                                </span>
                                <span class="fw-bolder" style="font-size: 2.5rem; ">
                                    @jogo.Placar2
                                </span>
                            </div>

                            <div class="flex-grow-1 p-4  d-flex justify-content-center align-items-center" style="background-color: #f53030">
                                <span class="fw-bolder" style="letter-spacing: 2px; font-size: 1.5rem;">
                                    @jogo.NomeTime2

                                </span>
                            </div>
                        </div>

                    }
                    @if (idJogo != null && partipacoes != null)
                    {
                        <section>
                            @foreach (Participacao item in partipacoes)
                            {
                                <div>
                                    <span>@item.NomeTime</span>
                                    <span>@item.NomeJogador</span>
                                    <span>@item.GolsMarcados</span>
                                    <span>
                                        @if (botoes.Any(x => x.Codigo == "A" || x.Codigo == "E"))
                                        {
                                            <button class="btn btn-success" type="button" onclick="editar('@idJogo', '@item.IdJogador')"><i class="bi bi-plus-lg"></i> Gols</button>
                                        }
                                    </span>
                                </div>

                            }

                        </section>
                    }

                </div>


            }
        </div>


    </div>
</form>



<script>
    const form1 = document.getElementById("form1");
    const selectJogoSelecionado = document.getElementById("idJogoSelecionado");

    function handleJogoSelecionado() {
        form1.idJogo.value = selectJogoSelecionado.value;
        form1.submit();
    }

    selectJogoSelecionado.addEventListener("change", handleJogoSelecionado)

    function executarAcao(acao) {
        form1.acao.value = acao;
        form1.submit();
    }

    function editar(idJogo, idJogador) {
        form1.idJogo.value = idJogo;
        form1.idJogador.value = idJogador;
        form1.acao.value = "A"


        form1.submit();
    }
</script>
