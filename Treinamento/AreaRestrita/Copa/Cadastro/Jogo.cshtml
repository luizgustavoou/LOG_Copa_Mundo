@RenderPage("~/AreaRestrita/Seguranca.cshtml");
@{
    Page.Title = "Jogo";
    Layout = "~/AreaRestrita/_Layout.cshtml";
}

@functions {
    private enum View
    {
        Index,
        New,
        Edit
    }

    private class Jogo
    {
        public string IdJogo { get; set; }
        public string IdTime1 { get; set; }
        public string NomeTime1 { get; set; }
        public string IdTime2 { get; set; }
        public string NomeTime2 { get; set; }
        public int Placar1 { get; set; }
        public int Placar2 { get; set; }

    }

    private class Time
    {
        public string IdTime { get; set; }
        public string Nome { get; set; }
    }


    string acao = null;
    string idJogo = null;

    Jogo jogo = null;

    View view = View.Index;
    List<Jogo> jogos = null;
    List<Time> times = null;


    private void instanciarJogo()
    {
        if (jogo != null) return;

        jogo = new Jogo();
    }


    private void AlimentaVariaveis()
    {
        instanciarJogo();
        acao = Util.ChecaNulo(Request.Form["acao"]);
        idJogo = Util.ChecaNulo(Request.Form["idJogo"]);

        if (!string.IsNullOrWhiteSpace(Request.Form["view"]))
        {
            view = (View)Enum.Parse(typeof(View), Request.Form["view"]);
        }
    }

    private void LimpaVariaveis()
    {
        acao = null;
        idJogo = null;
    }

    private void ConsultarJogos()
    {
        Dictionary<string, object> parametros = new Dictionary<string, object>();

        parametros.Add("@IdJogo", idJogo);

        string procedure = GetNomeProcedure("C");
        Dao dao = new Dao();

        jogos = dao.ExecutarProcedureList<Jogo>(procedure, parametros);

    }

    private void ConsultarTimes()
    {
        Dictionary<string, object> parametros = new Dictionary<string, object>();

        parametros.Add("@TipoConsulta", 1);

        string procedure = GetNomeProcedure("C");

        Dao dao = new Dao();

        times = dao.ExecutarProcedureList<Time>(procedure, parametros);
    }

    private string GetNomeProcedure(string acao)
    {
        switch (acao)
        {
            case "C": return "stp_LGU_Jogo_Sel";
            case "I": return "stp_LGU_Jogo_Ins";
            case "A": return "stp_LGU_Jogo_Upd";
            case "E": return "stp_LGU_Jogo_Del";

            default:
                return null;
        }
    }

    private string isInvalid(string key)
    {
        return (!ModelState.IsValidField(key) ? "is-invalid" : "");
    }

    private void CarregadarDados()
    {
        if (view == View.Edit && acao == "C" && jogos != null && jogos.Count == 1)
        {
            jogo = jogos.FirstOrDefault();
        }
    }

    private void Manutencao()
    {
        Dictionary<string, object> parametros = new Dictionary<string, object>();

        parametros.Add("@idJogo", Util.ChecaNulo(jogo.IdJogo));
        parametros.Add("@idTime1", Util.ChecaNulo(jogo.IdTime1));
        parametros.Add("@idTime2", Util.ChecaNulo(jogo.IdTime2));

        string procedure = GetNomeProcedure(acao);

        Dao dao = new Dao();

        dao.ExecutarProcedure(procedure, parametros);
    }

    private void ExecutarManutencao()
    {
        instanciarJogo();

        jogo.IdTime1 = Request.Form["idTime1"];
        jogo.IdTime2 = Request.Form["IdTime2"];

        Manutencao();
        view = View.Index;
        ModelState.AddError("alert-success", "Operação realizada com sucesso");
        LimpaVariaveis();
    }
}

@{
    AlimentaVariaveis();

    if (acao == "I" || acao == "A" || acao == "E")
    {
        Util.ExceptionHandler(ExecutarManutencao, this.ModelState);
    }

    Util.ExceptionHandler(() =>
    {
        ConsultarTimes();
        ConsultarJogos();
        CarregadarDados();
    }, this.ModelState);
}

<body>
    <form name="form1" id="form1" method="post">
        <input type="hidden" name="acao" id="acao" />
        <input type="hidden" name="idJogo" id="idJogo" value="@idJogo" />
        <input type="hidden" name="view" id="view" value="@view" />

        <div class="container">
            <h1>Jogo</h1>

            @PageHelper.MakeAlert()

            @if (view == View.New || view == View.Edit)
            {
                <div class="mb-3">
                    <label for="idTime1">Time 1: </label>

                    <select class="form-select @isInvalid("idTime1")" name="idTime1" id="idTime1">
                        <option value=""></option>
                        @foreach (Time item in times)
                        {
                            <option value="@item.IdTime" @(jogo.IdTime1 == item.IdTime ? "selected" : "")>@item.Nome</option>
                        }
                    </select>
                    @PageHelper.makeFeedback("idTime1")
                </div>

                <div class="mb-3">
                    <label for="idTime2">Time 2: </label>

                    <select class="form-select @isInvalid("idTime2")" name="idTime2" id="idTime2">
                        <option value=""></option>
                        @foreach (Time item in times)
                        {
                            <option value="@item.IdTime" @(jogo.IdTime2 == item.IdTime ? "selected" : "")>@item.Nome</option>
                        }
                    </select>
                    @PageHelper.makeFeedback("idTime2")
                </div>
            }

            <div class="mb-3">
                <button class="btn btn-primary" type="submit" onclick="estadoInicial()">Limpar</button>


                @if (view == View.Index)
                {
                    <button class="btn btn-success" type="button" onclick="novo()">Novo</button>

                }

                @if (view == View.New)
                {
                    <button class="btn btn-success" type="button" onclick="executarAcao('I')">Incluir</button>

                }

                @if (view == View.Edit)
                {
                    <button class="btn btn-danger" type="button" onclick="executarAcao('E')">Excluir</button>
                    <button class="btn btn-warning" type="button" onclick="executarAcao('A')">
                        Alterar
                    </button>

                }
            </div>

            @if (view == View.Index)
            {
                if (jogos != null)
                {
                    <table class="mt-2 table table-dark table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Time 1</th>
                                <th>Time 2</th>
                                <th>Placar 1</th>
                                <th>Placar 2</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (Jogo item in jogos)
                            {
                                <tr>
                                    <td>@item.NomeTime1</td>
                                    <td>@item.NomeTime2</td>
                                    <td>@item.Placar1</td>
                                    <td>@item.Placar2</td>
                                    <td>
                                        <button class="btn btn-warning" type="button" onclick="editar('@item.IdJogo')" @(item.Placar1 > 0 || item.Placar2 > 0 ? "disabled" : "")>
                                            <i class="bi bi-pencil-fill"></i>
                                            Editar
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            }


    </form>

    <script src="~/Scripts/scripts.js">
    </script>

    <script>

        const form = document.getElementById("form1");

        function editar(idJogo) {
            form.view.value = "@((int)View.Edit)"
            form.idJogo.value = idJogo;
            executarAcao('C');
        }

        function novo() {
            form.view.value = "@((int)View.New)"
            executarAcao('C');
        }
    </script>
</body>


