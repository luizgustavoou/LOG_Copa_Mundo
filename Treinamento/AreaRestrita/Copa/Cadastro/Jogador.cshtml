@RenderPage("~/AreaRestrita/Seguranca.cshtml");
@{
    Page.Title = "Jogador";
    Layout = "~/AreaRestrita/_Layout.cshtml";
}


@functions {
    private enum View
    {
        Index,
        New,
        Edit
    }

    private class Jogador
    {
        public string IdJogador { get; set; }
        public string Nome { get; set; }
        public string IdTime { get; set; }
        public string NomeTime { get; set; }
        public decimal Salario { get; set; }
        public bool Tecnico { get; set; }
        public bool Capitao { get; set; }
        public bool Suspenso { get; set; }

    }

    private class Time
    {
        public string IdTime { get; set; }
        public string Nome { get; set; }
    }


    string acao = null;
    string idJogador = null;
    View view = View.Index;

    Jogador jogador = null;

    List<Botao> botoes = null;
    List<Jogador> jogadores = null;
    List<Time> times = null;


    private void instanciarJogador()
    {
        if (jogador != null) return;

        jogador = new Jogador();
    }

    private void AlimentaVariaveis()
    {
        instanciarJogador();
        acao = Util.ChecaNulo(Request.Form["acao"]);
        idJogador = Util.ChecaNulo(Request.Form["idJogador"]);

        botoes = new BotaoDao().GetAll();


        if (!string.IsNullOrWhiteSpace(Request.Form["view"]))
        {
            view = (View)Enum.Parse(typeof(View), Request.Form["view"]);
        }
    }

    private void LimpaVariaveis()
    {
        acao = null;
        idJogador = null;
    }

    private void ConsultarJogadores()
    {
        Dictionary<string, object> parametros = new Dictionary<string, object>();
        parametros.Add("@IdJogador", idJogador);

        jogadores = new Dao().ExecutarAcaoList<Jogador>("C", parametros);

    }

    private void ConsultarTimes()
    {
        Dictionary<string, object> parametros = new Dictionary<string, object>();

        parametros.Add("@TipoConsulta", 1);


        times = new Dao().ExecutarAcaoList<Time>("C", parametros);


    }

    private string isInvalid(string key)
    {
        return (!ModelState.IsValidField(key) ? "is-invalid" : "");
    }

    private void Manutencao()
    {
        Dictionary<string, object> parametros = new Dictionary<string, object>();

        parametros.Add("@IdJogador", Util.ChecaNulo(jogador.IdJogador));
        parametros.Add("@Nome", Util.ChecaNulo(jogador.Nome));
        parametros.Add("@IdTime", Util.ChecaNulo(jogador.IdTime));
        parametros.Add("@Salario", jogador.Salario);

        new Dao().ExecutarAcao(acao, parametros);

    }

    private void ExecutarManutencao()
    {
        instanciarJogador();

        jogador.IdJogador = Request.Form["IdJogador"];
        jogador.Nome = Request.Form["Nome"];
        jogador.IdTime = Request.Form["IdTime"];
        jogador.NomeTime = Request.Form["NomeTime"];
        jogador.Salario = Decimal.Parse(Request.Form["Salario"]);


        Manutencao();
        view = View.Index;
        LimpaVariaveis();
        ModelState.AddError("alert-success", "Operação realizada com sucesso.");

    }

    private void CarregarDados()
    {
        if (view == View.Edit && acao == "C" && jogadores != null && jogadores.Count == 1)
        {
            jogador = jogadores.FirstOrDefault();
        }
    }
}

@{
    AlimentaVariaveis();

    if (acao == "I" || acao == "A" || acao == "E")
    {
        Util.ExceptionHandler(ExecutarManutencao, this.ModelState);

    }

    Util.ExceptionHandler(() =>
    {
        ConsultarTimes();
        ConsultarJogadores();
        CarregarDados();
    }, this.ModelState);

}


<form name="form1" method="post">
    <input type="hidden" name="acao" id="acao" />
    <input type="hidden" name="idJogador" id="idJogador" value="@idJogador" />
    <input type="hidden" name="view" id="view" value="@view" />

    <div class="text-white container">
        <h1>Jogador</h1>


        @PageHelper.MakeAlert()


        @if (view == View.New || view == View.Edit)
        {
            <div class="mb-3">
                <label for="nome" class="form-label">Nome: </label>
                <input class="form-control @isInvalid("nome")" type="text" name="nome" id="nome" value="@jogador.Nome" />
                @PageHelper.makeFeedback("nome")
            </div>

            <div class="mb-3">
                <label for="idTime">Time: </label>

                <select class="form-select @isInvalid("idTime")" name="idTime" id="idTime">
                    <option value=""></option>
                    @foreach (Time item in times)
                    {
                        <option value="@item.IdTime" @(jogador.IdTime == item.IdTime ? "selected" : "")>@item.Nome</option>
                    }


                </select>
                @PageHelper.makeFeedback("idTime")

            </div>

            <div class="mb-3">
                <label for="salario" class="form-label">Salário: </label>
                <input class="form-control @isInvalid("salario")" type="text" name="salario" id="salario" value="@jogador.Salario" />
                @PageHelper.makeFeedback("salario")
            </div>

        }

        <div class="mb-3">
            <button class="btn btn-primary" type="submit" onclick="estadoInicial()">Limpar</button>

            @if (view == View.New)
            {
                @PageHelper.MakeBotao(botoes, "I")

            }

            @if (view == View.Edit)
            {

                @PageHelper.MakeBotao(botoes, "E")
                @PageHelper.MakeBotao(botoes, "A")
            }

            @if (view == View.Index)
            {
                if (botoes.Any(x => x.Codigo == "I"))
                {
                    <button class="btn btn-primary" type="button" onclick="novo()">Adicionar novo</button>
                }

            }
        </div>

        @if (jogadores != null)
        {
            if (view == View.Index)
            {
                <table class="mt-3 table table-dark table-striped table-hover">
                    <thead>
                        <tr>
                            <th></th>
                            <th>Suspenso</th>
                            <th>Nome</th>
                            <th>Time</th>
                            <th>Salário</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (Jogador item in jogadores)
                        {
                            <tr>
                                <td>@item.Suspenso</td>
                                <td>
                                    @if (item.Capitao)
                                    {
                                        <img width="40" src="~/captain.png" />
                                    }

                                    @if (item.Tecnico)
                                    {
                                        <img width="40" src="~/coach.png" />
                                    }
                                </td>
                                <td class="@(item.Suspenso ? "text-decoration-line-through fw-bold" : "")" style="text-decoration-color: red!important; text-decoration-thickness: 2px!important;">@item.Nome</td>
                                <td>@item.NomeTime</td>
                                <td>@item.Salario.ToString("C2")</td>
                                <td>
                                    @if (botoes.Any(x => x.Codigo == "A" || x.Codigo == "E"))
                                    {
                                        <button class="btn btn-warning" type="button" onclick="editar('@item.IdJogador', '@item.Nome', '@item.IdTime')">
                                            Editar
                                            <i class="bi bi-pencil-fill"></i>
                                        </button>

                                    }

                                </td>
                            </tr>

                        }
                    </tbody>
                </table>
            }
        }
    </div>
</form>

<script src="~/Scripts/scripts.js"></script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.js"
        integrity="sha256-yE5LLp5HSQ/z+hJeCqkz9hdjNkk1jaiGG0tDCraumnA="
        crossorigin="anonymous"></script>

<script>
    $('input[name="salario"]').mask('000.000.000.000.000,00', {reverse: true});

        function editar(idJogador, nome, idTime) {
            document.form1.idJogador.value = idJogador;
            document.form1.view.value = "@((int)View.Edit)"
            executarAcao('C');
        }

        function novo() {
            document.form1.view.value = "@((int)View.New)";
            executarAcao('');
        }
</script>


