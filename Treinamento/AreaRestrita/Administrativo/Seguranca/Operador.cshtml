@RenderPage("~/AreaRestrita/Seguranca.cshtml");
@{
    Page.Title = "Operador";
    Layout = "~/AreaRestrita/_Layout.cshtml";
}

@functions {
    private enum View
    {
        Index,
        New,
        Edit
    }

    private class Operador
    {
        public string IdOperador { get; set; }
        public string Cpf { get; set; }
        public string Nome { get; set; }
        public string Senha { get; set; }
    }


    string senha = null;
    string acao = null;

    string idOperador = null;

    Operador operador = null;


    View view = View.Index;
    List<Operador> operadores = null;
    List<Botao> botoes = null;

    private void AlimentaVariaveis()
    {
        operador = new Operador();

        acao = Util.ChecaNulo(Request.Form["acao"]);
        idOperador = Util.ChecaNulo(Request.Form["idOperador"]);
        botoes = new BotaoDao().GetAll();

        if (!string.IsNullOrWhiteSpace(Request.Form["view"]))
        {
            view = (View)Enum.Parse(typeof(View), Request.Form["view"]);
        }
    }

    private void LimpaVariaveis()
    {
        acao = null;
        idOperador = null;
        operador = null;
    }

    private void Consultar()
    {
        Dictionary<string, object> parametros = new Dictionary<string, object>();
        parametros.Add("@IdOperador", idOperador);
        operadores = new Dao().ExecutarAcaoList<Operador>("C", parametros);

    }

    private string isInvalid(string key)
    {
        return (!ModelState.IsValidField(key) ? "is-invalid" : "");
    }

    private void Manutencao()
    {
        Dictionary<string, object> parametros = new Dictionary<string, object>();
        parametros.Add("@IdOperador", operador.IdOperador);
        parametros.Add("@Cpf", operador.Cpf);
        parametros.Add("@Nome", operador.Nome);
        parametros.Add("@Senha", operador.Senha);

        new Dao().ExecutarAcao(acao, parametros);

    }

    private void instanciarOperador()
    {
        if (operador == null)
        {
            operador = new Operador();
        }
    }

    private void carregarDados()
    {
        if (view == View.Edit && acao == "C" && operadores != null && operadores.Count == 1)
        {
            operador = operadores.FirstOrDefault();

        }
    }

    private void executarManutencao()
    {
        operador = new Operador()
        {
            IdOperador = Util.ChecaNulo(Request.Form["idOperador"]),
            Cpf = Util.ChecaNulo(Request.Form["cpf"]),
            Nome = Util.ChecaNulo(Request.Form["nome"]),
            Senha = Util.ChecaNulo(Request.Form["senha"])
        };

        Manutencao();
        view = View.Index;
        LimpaVariaveis();
        ModelState.AddError("alert-success", "Operação realizada com sucesso.");
    }

    public static string GenerateRandomPassword(int length)
    {
        const string charset = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+~`|}{[]\\:;?><,./-=";
        Random random = new Random();
        string password = "";

        for (int i = 0; i < length; i++)
        {
            int randomIndex = random.Next(charset.Length);
            password += charset[randomIndex];
        }

        return password;
    }
}

@{
    AlimentaVariaveis();

    if (acao == "I" || acao == "A" || acao == "E")
    {
        Util.ExceptionHandler(executarManutencao, this.ModelState);

    }

    if (acao == "GS")
    {
        senha = GenerateRandomPassword(12);
        Response.Write(senha);
        Response.End();
    }

    Util.ExceptionHandler(() =>
    {
        Consultar();
        carregarDados();

    }, this.ModelState);


}


<form class="text-light" name="form1" method="post">
    <input type="hidden" name="acao" id="acao" />
    <input type="hidden" name="idOperador" id="idOperador" value="@idOperador" />
    <input type="hidden" name="view" id="view" value="@((int)view)" />

    <div class="container">
        <h1>Operadores</h1>

        @PageHelper.MakeAlert()



        @if (view == View.New || view == View.Edit)
        {
            <div class="mb-3">
                <label for="cpf" class="form-label">CPF: </label>
                <input class="form-control @isInvalid("cpf")" type="text" name="cpf" id="cpf" value="@operador.Cpf" />
                @PageHelper.makeFeedback("cpf")
            </div>

            <div class="mb-3">
                <label for="nome" class="form-label">Nome: </label>
                <input class="form-control @isInvalid("nome")" type="text" name="nome" id="nome" value="@operador.Nome" />
                @PageHelper.makeFeedback("nome")
            </div>

            <div>
                <label for="senha" class="form-label">Senha: </label>
                <div class="input-group mb-3">
                    <input class="form-control @isInvalid("senha")" type="password" name="senha" id="senha" value="@operador.Senha" />
                    <span class="input-group-text" id="basic-addon1">
                        <i role="button" class="bi bi-eye-fill"></i>
                    </span>
                    @PageHelper.makeFeedback("senha")
                </div>
            </div>

            <div class="row">

                <div class="col-3">
                    <label for="cep" class="form-label">CEP: </label>
                    <input class="form-control" type="text" name="cep" id="cep" />
                </div>

                <div class="col-3">
                    <label for="localidade" class="form-label">Localidade: </label>
                    <input class="form-control" type="text" name="localidade" id="localidade" />
                </div>

                <div class="col-3">
                    <label for="bairro" class="form-label">Bairro: </label>
                    <input class="form-control" type="text" name="bairro" id="bairro" />
                </div>

                <div class="col-3">
                    <label for="logradouro" class="form-label">Logradouro: </label>
                    <input class="form-control" type="text" name="logradouro" id="logradouro" />
                </div>

            </div>
        }


        <div class="mt-3">
            <button class="btn btn-primary" type="submit" onclick="estadoInicial()">Limpar</button>
            @if (view == View.New)
            {
                @PageHelper.MakeBotao(botoes, "I")
                <button class="btn btn-primary" type="button" id="geradorSenha">Gerar senha</button>

            }

            @if (view == View.Edit)
            {
                @PageHelper.MakeBotao(botoes, "E")
                @PageHelper.MakeBotao(botoes, "A")
            }

            @if (view == View.Index)
            {
                if (botoes.Any(x => x.Codigo == "I"))
                {
                    <button class="btn btn-primary" type="button" onclick="novo()">Novo</button>
                }

            }



        </div>

        @if (view == View.Index)
        {
            if (operadores != null)
            {
                <table class="mt-2 table table-dark table-striped table-hover">
                    <thead>
                        <tr>
                            <th>IdOperador</th>
                            <th>CPF</th>
                            <th>Nome</th>
                            <th>Senha</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (Operador item in operadores)
                        {
                            <tr>
                                <td>@item.IdOperador</td>
                                <td>@item.Cpf</td>
                                <td>@item.Nome</td>
                                <td>@(new string(item.Senha.Select(c =>  '*').ToArray()))</td>
                                <td>
                                    @if (botoes.Any(x => x.Codigo == "A" || x.Codigo == "E"))
                                    {
                                        <button class="btn btn-warning" type="button" onclick="editar('@item.IdOperador')">
                                            <i class="bi bi-pencil-fill"></i>
                                            Editar
                                        </button>
                                    }
                                </td>
                            </tr>

                        }
                    </tbody>
                </table>

            }
        }


    </div>
</form>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
@*JQuery Mask libk*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.js"
        integrity="sha256-yE5LLp5HSQ/z+hJeCqkz9hdjNkk1jaiGG0tDCraumnA="
        crossorigin="anonymous"></script>
@*JQuery Debounce lib*@
<script src="http://benalman.com/code/projects/jquery-throttle-debounce/jquery.ba-throttle-debounce.js"></script>
<script src="~/Scripts/scripts.js"></script>

<script>
    const $inputCep = $('input[name="cep"]')
    const $inputLocalidade = $("input[name='localidade']");
    const $inputBairro = $("input[name='bairro']");
    const $inputLogradouro = $("input[name='logradouro']");

    $inputCep.mask('00000-000');

    $inputCep.on('input', $.debounce(600, function (e) {
        const cep = e.target.value;

        if (cep.lenght < 9) return;

        getCepInfo(cep);

    }));    

    function getCepInfo(cep) {
        $.ajax({
            method: "GET",
            url: `https://viacep.com.br/ws/${cep}/json/`
        }).done(function (res) {
            const { localidade, bairro, logradouro } = res;

            $inputLocalidade.val(localidade);
            $inputBairro.val(bairro);
            $inputLogradouro.val(logradouro);
        })
    }


    $('button#geradorSenha').click(function () {
        gerarSenha();
    });

    $('.input-group-text i').click(function () {
        const $inputPassword = $("input[name='senha']")

        if ($inputPassword.attr("type") == 'password') {
            $inputPassword.prop("type", "text")
            $(this).attr("class", 'bi bi-eye-slash-fill')
            return;
        }

        $inputPassword.prop("type", "password")
        $(this).attr("class", 'bi bi-eye-fill')


    });


        function gerarSenha() {
            $.ajax({
                method: "POST",
                url: "Operador.cshtml",
                data: { acao: "GS" }
            }).done(function (res) {
                $("input[name='senha']").val(res);

            })
        }

        function editar(idOperador) {
            document.form1.view.value = "@((int)View.Edit)"
            document.form1.idOperador.value = idOperador;
            executarAcao('C');
        }

        function novo() {
            document.form1.view.value = "@((int)View.New)";
            executarAcao('');
        }
</script>


