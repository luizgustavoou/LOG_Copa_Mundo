@{
    Page.Title = "Jogo";
    Layout = "~/AreaRestrita/_Layout.cshtml";
}

@functions {
    private class Jogo
    {
        public string IdJogo { get; set; }
        public string IdTime1 { get; set; }
        public string NomeTime1 { get; set; }
        public string IdTime2 { get; set; }
        public string NomeTime2 { get; set; }
        public int Placar1 { get; set; }
        public int Placar2 { get; set; }

    }

    private class Time
    {
        public string IdTime { get; set; }
        public string Nome { get; set; }
    }


    string acao = null;
    string idJogo = null;
    string idTime1 = null;
    string idTime2 = null;


    List<Jogo> jogos = null;
    List<Time> times = null;



    private void AlimentaVariaveis()
    {
        acao = Util.ChecaNulo(Request.Form["acao"]);
        idJogo = Util.ChecaNulo(Request.Form["idJogo"]);
        idTime1 = Util.ChecaNulo(Request.Form["idTime1"]);
        idTime2 = Util.ChecaNulo(Request.Form["idTime2"]);
    }

    private void LimpaVariaveis()
    {
        acao = null;
        idJogo = null;
        idTime1 = null;
        idTime2 = null;
    }

    private void ConsultarJogos()
    {

        string procedure = GetNomeProcedure("C");
        Dao dao = new Dao();

        jogos = dao.ExecutarProcedureList<Jogo>(procedure, null);

    }

    private void ConsultarTimes()
    {
        Dictionary<string, object> parametros = new Dictionary<string, object>();

        parametros.Add("@TipoConsulta", 1);

        string procedure = GetNomeProcedure("C");

        Dao dao = new Dao();

        times = dao.ExecutarProcedureList<Time>(procedure, parametros);
    }

    private string GetNomeProcedure(string acao)
    {
        switch (acao)
        {
            case "C": return "stp_LGU_Jogo_Sel";
            case "I": return "stp_LGU_Jogo_Ins";
            case "A": return "stp_LGU_Jogo_Upd";
            case "E": return "stp_LGU_Jogo_Del";

            default:
                return null;
        }
    }

    private void Manutencao()
    {
        Dictionary<string, object> parametros = new Dictionary<string, object>();

        parametros.Add("@idJogo", idJogo);
        parametros.Add("@idTime1", idTime1);
        parametros.Add("@idTime2", idTime2);

        string procedure = GetNomeProcedure(acao);

        Dao dao = new Dao();

        dao.ExecutarProcedure(procedure, parametros);


    }
}

@{
    AlimentaVariaveis();

    if (acao == "I" || acao == "A" || acao == "E")
    {
        try
        {
            Manutencao();
            LimpaVariaveis();

        }
        catch (Exception ex)
        {
            ModelState.AddError("alert-danger", ex.Message);
        }
    }

    ConsultarTimes();
    ConsultarJogos();

}

@section head {
}

<body>
    <form name="form1" id="form1" method="post">
        <input type="hidden" name="acao" id="acao" />
        <input type="hidden" name="idJogo" id="idJogo" value="@idJogo" />

        <div class="container">
            <h1>Jogo</h1>

            @PageHelper.MakeAlert()

            <div>
                <label for="idTime1">Time 1: </label>

                <select class="form-select" name="idTime1" id="idTime1">
                    <option value=""></option>
                    @foreach (Time item in times)
                    {
                        <option value="@item.IdTime">@item.Nome</option>
                    }
                </select>
            </div>

            <div class="mb-3">
                <label for="idTime2">Time 2: </label>

                <select class="form-select" name="idTime2" id="idTime2">
                    <option value=""></option>
                    @foreach (Time item in times)
                    {
                        <option value="@item.IdTime">@item.Nome</option>
                    }
                </select>
            </div>

            <button class="btn btn-primary" type="submit" onclick="estadoInicial()">Limpar</button>
            <button class="btn btn-success" type="button" onclick="executarAcao('I')">Incluir</button>
            <button class="btn btn-danger" type="button" onclick="executarAcao('E')">Excluir</button>
            <button class="btn btn-warning" type="button" onclick="executarAcao('A')">Alterar</button>

            @if (jogos != null)
            {
                <table class="mt-2 table table-dark table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Time 1</th>
                            <th>Time 2</th>
                            <th>Placar 1</th>
                            <th>Placar 2</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (Jogo item in jogos)
                        {
                            <tr>
                                <td>@item.NomeTime1</td>
                                <td>@item.NomeTime2</td>
                                <td>@item.Placar1</td>
                                <td>@item.Placar2</td>
                                <td>
                                    <button class="btn btn-warning" type="button" onclick="editar('@item.IdJogo', '@item.IdTime1', '@item.IdTime2')">
                                        <i class="bi bi-pencil-fill"></i>
                                        Editar
                                    </button>
                                </td>
                            </tr>

                        }
                    </tbody>
                </table>


            }

        </div>

      
    </form>

    <script src="~/Scripts/scripts.js">
    </script>

    <script>

        const form = document.getElementById("form1");

        //function executarAcao(acao) {
        //    form.acao.value = acao;


        //    if (form.idTime1.value == form.idTime2.value) {

        //        window.alert("Não é possível selecionar o mesmo time nos campos");

        //        return;
        //    }

        //    form.submit();

        //}

        function editar(idJogo, idTime1, idTime2) {
            form.idJogo.value = idJogo;
            form.idTime2.value = idTime2;
            form.idTime1.value = idTime1;
        }
    </script>
</body>


